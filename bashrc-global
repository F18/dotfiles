#
# BASHRC-GLOBAL
#-- this file is sourced from .bashrc
#-- contains all global aliases used across your multiple platforms
#-- requires definition of $MYHOME and $MYWORK directories in the platform specific .bashrc
#

#
# Define some colors
#
NONE='\[\e[01;32m\]'
WHITE_1='\[\033[0;1m\]'
BLACK='\[\033[0;30m\]'
GRAY='\[\033[1;30m\]'
RED='\[\033[0;31m\]'
LIGHT_RED='\[\033[1;31m\]'
GREEN='\[\033[0;32m\]'
LIGHT_GREEN='\[\033[1;32m\]'
BROWN='\[\033[0;33m\]'
YELLOW='\[\033[1;33m\]'
BLUE='\[\033[0;34m\]'
LIGHT_BLUE='\[\033[1;34m\]'
PURPLE='\[\033[0;35m\]'
LIGHT_PURPLE='\[\033[1;35m\]'
CYAN='\[\033[0;36m\]'
LIGHT_CYAN='\[\033[0;1;36m\]'
LIGHT_GRAY='\[\033[0;37m\]'
WHITE='\[\033[1;37m\]'
BRACE_COLOR=$LIGHT_GRAY
LBRACE=$BRACE_COLOR[$BRACE_COLOR
RBRACE=$BRACE_COLOR]$BRACE_COLOR
SYMBOL="\\$"
WD="\W"
#
# PROMPT DISPLAYS
#
# Good ones:
#
#PS1="$LBRACE$RED\w$RBRACE\n$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\W$RBRACE$NONE$ "
PS1="$RED\w\n$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\W$RBRACE$NONE$ "
export PS1
#
# Old ones:
#
#PS1=[\\w]\\$
#PS1='\[\e[01;32m\][\u\[\e[01;32m\]@\[\e[01;31m\]\h\[\e[01;32m\] \[\e[01;33m\]\W\[\e[01;32m\]] '
#PS1="$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW['textdir']/\W$RBRACE$NONE "
#PROMPT_COMMAND='DIR=`pwd|sed -e "s!$HOME!~!"`; if [ ${#DIR} -gt 15 ]; then CurDir=${DIR:0:12}...${DIR:${#DIR}-15}; else CurDir=$DIR; fi'
#PROMPT_COMMAND='DIR=`pwd|sed -e "s!$HOME!~!"`; if [ ${#DIR} -gt 30 ]; then CurDir=.${DIR:${#DIR}-30}; else CurDir=$DIR; fi'
#PS1="$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\$CurDir$RBRACE$NONE$ "
#CurDir=${PWD%/*} <-- RR: this gets you one the parent directory
#
# Enable color support of ls and also add handy aliases
#
if [ "$TERM" != "dumb" ]; then
    [ -e "$HOME/dircolors/LS_COLORS" ] && DIR_COLORS="$HOME/dircolors/LS_COLORS"
    [ -e "$DIR_COLORS" ] || DIR_COLORS=""
    eval "`dircolors -b $DIR_COLORS`"
    alias ls='ls --color=auto'
    alias dir='ls --color=auto --format=vertical'
    alias vdir='ls --color=auto --format=long'
fi
#
# User specific aliases and functions
#
alias ...='cd ..'                             # Go up one directory
alias ..='cd ..; l'                           # Go up one directory clear and list files
alias .='pwd'                                 # list the current directory path

alias bye='exit'                              # Close connection
alias brc='cd; emacs .bashrc &'               # Open the .bashrc file for editing

alias cdarc='cd $MYHOME/02_courses/04_CFD2/02_Assignment'
alias cdc='cd $MYHOME/CFFC'
alias cddec='cd $MYHOME/01_thesis/DECs/dec1'
alias cdo='cd $MYHOME/optima'
alias cdoo='cd $MYHOME/optima/optima2D'
alias cdp='cd $MYHOME/01_thesis/seminars/utias/20111007_research_update_to_group'
alias cds='cd $MYWORK'
alias cdt='cd $HOME/01_utias/01_local/01_thesis/myPapers/conferences/2012_cfdsc/publication/paper'
alias cdvoo='cd $MYWORK/y2013/m02-store'
alias cdvo='cd $MYWORK/y2013/m12'
alias cdwd='cd /windows/Users/Owner/Documents'
alias cdwdb='cd /windows/Users/Owner/Documents/03_Play/2006-2008\ Banking'

alias chmodf='find . -type f -print | xargs chmod' # chmod files only (recursively)
alias cll='clear'                             # Clear the screen
alias cl='clear; ls'                          # Clear and list
alias cp='cp -i'                              # Copy, but ask me first
alias cpo='cp $HOME/optima/optima2D/OPTIMA2D_x86_64 .'
alias crop='mogrify -trim'                    # crop the given filename using imagemagik
                                              # (allows you to crop multiple files at one)

alias df='df -h'
alias dirr='ls -al | more'  
alias dus='sudo du -sm * | sort -n'
alias duf='du -sm * | sort -n'                # list folders in order of increasing size
alias digitizeit='cd $HOME/digitizeit; java -cp libs/JimiProClasses.zip:libs/jh.jar:libs/kunststoff.jar:libs/foxtrot.jar:DigitizeIt.jar de.ibo.digitizer.DigitizeIt' # Start the digitizeit software

alias e='emacs'                               # Open the text editor emacs
alias ed='ee'                                 # Open the text editor emacs with emacsclient daemon
                                              # Note: ee is a bash script with the following command:
                                              # estart='exec emacsclient --alternate-editor="" -c "$@" -n'
alias eall='e *.cc *.h'                       # Open all C++ related files in current directory
alias eb='cd; e .bashrc &'                    # Open the .bashrc file for editing
alias emptytrash='sudo rm -rf $HOME/.local/share/Trash/files/*'
alias ett='emacs -nw -q'                      # Open emacs in terminal mode (-nw) without loading the init-file (-q)
alias et='emacs -nw'                          # Open emacs in terminal mode (-nw)
alias ec='emacsclient -nw'                    # Open emacs in terminal mode (-nw)
alias ev='evince'                             # Open evince pdf viewer

alias grep="grep --color=auto"                # grep: make it highlight the search string
alias gn='gnuplot'                            # run gnuplot 
alias gb='git branch -a'                      # display all git branches
alias gk='gitk --all'                         # open git repository GUI
alias gl='git log'                            # display git log
alias gt='git status'                         # display git status
alias gu='git remote update'                  # update remote repositories
alias gv='gvim'                               # open gvim
alias g='gvim'                                # open gvim

alias head='head -100'                        # Display the first 100 lines of a file
alias hist='history'                          # Display history

alias imindmapV2='cd $HOME/ProgramFiles/iMindMap2.2.3; ./iMindMap'

alias ejobs='v $MYHOME/bin/scripts/script-lm.sh'
alias jobs='$MYHOME/bin/scripts/script-lm.sh'

alias k1='kill -15'
alias k9='kill -9'

alias l='ls -lh'                              # List all files in short format
alias ll='ls -laSh'                           # List all files in long format
alias la='ls -a'                              # List all including hidden 
alias lm='ls -lrth'                           # List all files in order of date modified
alias ld='ls -lrSh'                           # List all files in order of file size
alias lf='ls -l | grep ^-'                    # List files only (not directories)
alias lt='ll --sort=extension'                # List files only (not directories)

alias m='more'
alias m0='more rest00-00'
alias mv='mv -i'                              # Move, but ask me first
alias myzip='tar -cvzf'                       # use as "myzip filearchive.tar.gz  foldername/"
alias myunzip='tar -xvpzf'                    # extract archive, w/ verbose, permissions, gunzip, and filename
alias mousefix='gpointing-device-settings'

alias oo='openoffice.org'                     # Open the openoffice software
alias office='openoffice.org'

alias pdf='pdfstudio8'                        # For a launcher you can use PDFStudio as the command
alias pg='ping www.google.ca'                 # ping the google website
alias ps2pdf='ps2pdf -sPAPERSIZE=a4'          # Force the papersize to be the standard a4 letter
alias psopt='ps aux | grep OPTIMA2D'          # Force the papersize to be the standard a4 letter
alias py='python'
alias pmem='pidstat -r -p'                    # Outputs the memory statistics for a particular job id
                                              # Enter the following: "pmem 6218 2 5 > memlog.txt" for 
                                              # 5 outputs every 2 seconds written to file memlog.txt

alias re='reset'                              # Reset the terminal
alias rm='rm -i'                              # Remove, but ask me first
alias rme='rm *~ -i'                          # Remove emacs backup files, but ask me first
alias rmef='rm *~ -f'                         # Remove emacs backup files, but ask me first
alias rmout='rm output.201* -rf'
alias rmrest='rm rest* screen -f'
alias rename0100='rename "s/01/00/g" rest01*' # rename all rest01 files to rest00 in a directory
alias sbash='source $HOME/.bashrc'            # refresh terminal with new .bashrc file
alias sb='source $HOME/.bashrc'               # refresh terminal with new .bashrc file
alias scr='cd $MYWORK" "'
alias sls='screen -ls'                        # lists the GNU screen sessions
alias sc='screen -t " "'                      # attaches to a given screen session (use session PID)
alias sr='screen -r'                          # attaches to a given screen session (use session PID)
alias sn='tail -100f SNOPT.sum00'
alias snd='tail -n5 */SNOPT.sum00'

alias tp='tecplot'                            # Run Tecplot
alias tf='tail --lines=500 -F'                # run tail with 500 lines and live following
alias t='tf'                                  # run tail with 100 lines and live following
alias tecplot='tec360'                        # Run tec360 based on the tecplot path set below
alias tf='tail --lines=300 -F'                # run tail with 100 lines and live following
alias t1='tail --lines=1'
alias t1q='tail -q -n 1'
alias t2q='tail -q -n 2'
alias t5='tail --lines=5'
alias t10='tail --lines=10 '
alias t20='tail --lines=20 '
alias tg0='tail -50f rest00-00.gnu'
alias tg1='tail -50f rest00-01.gnu'
alias tg2='tail -50f rest00-02.gnu'
alias tg3='tail -50f rest00-03.gnu'
alias tg4='tail -50f rest00-04.gnu'
alias tg5='tail -50f rest00-05.gnu'
alias tg6='tail -50f rest00-06.gnu'
alias tg7='tail -50f rest00-07.gnu'
alias tg='tf *.gmgrad'
alias th='tail -50f *.his'

alias tmk='tmux kill-session -t'
alias tml='tmux list-sessions'
alias tmd='tmux detach'
alias tma='tmux attach -t' 

alias tp='tf *00.tp'
alias tree='tree -C -I "*.git"'               # list all files and directories as a tree
alias treed='tree -C -d -I "*.git"'           # list all directories
alias to='tf *00.opt'
alias tr='tf *00.tp'
alias tpout='tf *00.tpout'
alias tpsum='tf *00.tpsum'
alias tpld='tf *00.tpld'
alias ts='tf screen'

alias vi='v'
alias vg='valgrind --tool=memcheck --leak-check=yes' # Execute program with valgrind debuger
alias vb='v $HOME/.bashrc'
alias vo='v opt.inp'
alias vs='v screen'
alias vv='v $HOME/dotfiles/vim-local/vimrc'

#
# Source other definitions
#
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi
#
# Export editor
#
export EDITOR="vi"

#
# Custom functions definitions
#

#
# Grep/Search related
#
#-- Find a file with a pattern in name:
function ff() { find . -type f -name '*'$@'*' ; }
#-- Find a file with a pattern in name:
function fft1() { find '*'$@'*' -type f; sed -n '$p'; }
#-- Recursively searches all the files for the given string
function rgrep() { grep -irn --include="*" -- "$@" . ; }
#-- C++ .cc grep, only searches C++ source (.cc) files
function grepc() { grep -in --include="*.cc" -- "$@" * ; }
function rgrepc() { grep -irn --include="*.cc" -- "$@" . ; }
#-- C++ .h grep, only searches C++ header (.h) files
function greph() { grep -in --include="*.h" -- "$@" * ; }
function rgreph() { grep -irn --include="*.h" -- "$@" . ; }
#-- Fortran grep, only searches Fortran source 
function grepf() { grep -in --include="*.[fFinc]*" -- "$@" * ; }
function rgrepf() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@" . ; }
function gf() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@" . ; }
function gfc() { grep -irn --include=*.{f,F,f90,F90,inc} -- "call $@" . ; }
function gfs() { grep -irn --include=*.{f,F,f90,F90,inc} -- "subroutine $@" . ; }
function gfe() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@[\t ]*=[^=]" . ; }
#-- Python grep, only searches Python source
function grepy() { grep -in --include="*.py" -- "$@" * ; }
function rgrepy() { grep -irn --include="*.py" -- "$@" . ; }
#-- specify file type and expression
function gg() { 
args=("$@") ;
echo "Arguments are ${args[$((0))]} and ${args[$((1))]}";
grep -irn --include="*.${args[$((0))]}" -- "${args[$((1))]}" . ; 
}
#
# Media related
#
#-- convert ogv file to avi (input is the filename without the extension)
function ogv2avi() { mencoder -idx "$@".ogv -ovc lavc -oac mp3lame -o "$@".avi ; }
#-- convert avi file to mpg (input is the filename without the extension)
function avi2mpg() { ffmpeg -i "$@".avi "$@".mpg ; }
#-- convert ogv file to mpg (input is the filename without the extension)
function ogv2mpg() { mencoder -idx "$@".ogv -ovc lavc -oac mp3lame -o "$@".avi ; ffmpeg -i "$@".avi "$@".mpg ; }
#-- tail the rest00-##.gnu file
function tg() { tail -50f rest00-$@.gnu; }
#
# bash cd and list
#
function c() { cd "$@" ; l ;}
function cs() { cd *"$@"* ; l ;}
#
# GIT related
#
function gd() { git diff > $MYHOME/tmp~; v $MYHOME/tmp~; }
#
# OPTIMA2D related
#
function go() { $MYHOME/optima/optima2D/OPTIMA2D_x86_64 > screen;}
#
function 02-cleanup() { 2-cleanup-snopt; }
#
function subdir-clean-rmout() 
{
  for dir in */; do
    echo $dir;
    cd $dir;
    2-cleanup-snopt; 
    rmout; 
    cd ../
  done
}
#
function subdir-cp-grid 
{ 
  for dir in */; do
    echo $dir;
    /bin/cp -f grid-new* $dir/.
  done
}
#
function subdir-cp-o 
{ 
  for dir in */; do
    echo $dir;
    /bin/cp -f $MYHOME/optima/optima2D/OPTIMA2D_x86_64 $dir/.
  done
}
#
# END OF BASHRC-GLOBAL
