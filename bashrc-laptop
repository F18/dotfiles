# .bashrc
# define some colors
NONE='\[\e[01;32m\]'
WHITE_1='\[\033[0;1m\]'
BLACK='\[\033[0;30m\]'
GRAY='\[\033[1;30m\]'
RED='\[\033[0;31m\]'
LIGHT_RED='\[\033[1;31m\]'
GREEN='\[\033[0;32m\]'
LIGHT_GREEN='\[\033[1;32m\]'
BROWN='\[\033[0;33m\]'
YELLOW='\[\033[1;33m\]'
BLUE='\[\033[0;34m\]'
LIGHT_BLUE='\[\033[1;34m\]'
PURPLE='\[\033[0;35m\]'
LIGHT_PURPLE='\[\033[1;35m\]'
CYAN='\[\033[0;36m\]'
LIGHT_CYAN='\[\033[0;1;36m\]'
LIGHT_GRAY='\[\033[0;37m\]'
WHITE='\[\033[1;37m\]'
BRACE_COLOR=$LIGHT_GRAY
LBRACE=$BRACE_COLOR[$BRACE_COLOR
RBRACE=$BRACE_COLOR]$BRACE_COLOR
SYMBOL="\\$"
WD="\W"

# PROMPT DISPLAYS
#
# Good ones:
#
#PS1="$LBRACE$RED\w$RBRACE\n$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\W$RBRACE$NONE$ "
PS1="$RED\w\n$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\W$RBRACE$NONE$ "
export PS1
#
# Old ones:
#
#PS1=[\\w]\\$
#export PS1
#PS1='\[\e[01;32m\][\u\[\e[01;32m\]@\[\e[01;31m\]\h\[\e[01;32m\] \[\e[01;33m\]\W\[\e[01;32m\]] '
#PS1="$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW['textdir']/\W$RBRACE$NONE "
#PROMPT_COMMAND='DIR=`pwd|sed -e "s!$HOME!~!"`; if [ ${#DIR} -gt 15 ]; then CurDir=${DIR:0:12}...${DIR:${#DIR}-15}; else CurDir=$DIR; fi'
# PROMPT_COMMAND='DIR=`pwd|sed -e "s!$HOME!~!"`; if [ ${#DIR} -gt 30 ]; then CurDir=.${DIR:${#DIR}-30}; else CurDir=$DIR; fi'
# PS1="$LBRACE\D{%H:%M}$RBRACE$LBRACE\h $YELLOW\$CurDir$RBRACE$NONE$ "
# CurDir=${PWD%/*} <-- RR: this gets you one the parent directory

# Set terminal to 256 color
export TERM=xterm-256color

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    [ -e "$HOME/dircolors/LS_COLORS" ] && DIR_COLORS="$HOME/dircolors/LS_COLORS"
    [ -e "$DIR_COLORS" ] || DIR_COLORS=""
    eval "`dircolors -b $DIR_COLORS`"
    alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
fi


# User specific aliases and functions

alias ...='cd ..'                   # Go up one directory
alias ..='cd ..; l'                # Go up one directory clear and list files

alias .='pwd'                       # list the current directory path
alias bye='exit'                    # Close connection
alias brc='cd; emacs .bashrc &'     # Open the .bashrc file for editing

alias cdarc='cd /home/ramy/01_utias/01_local/02_courses/04_CFD2/02_Assignment'
alias cdc='cd /home/ramy/01_utias/01_local/02_courses/10_PPIT'
alias cdg='cd /home/ramy/01_utias/02_oddjob/optima-grids/ramy-amber2D-grids'
alias cdh='cd /home/ramy/01_utias/03_hpacf/'
alias cdhc='cd /home/ramy/01_utias/03_hpacf/CFFC/itanium_CFFC'
alias cdo='cd /home/ramy/01_utias/02_oddjob'
alias cdoc='cd /home/ramy/01_utias/02_oddjob/CFFC'
alias cdoo='cd /home/ramy/01_utias/02_oddjob/optima/optima2D'
alias cdp='cd /home/ramy/01_utias/01_local/01_thesis/seminars/utias/20111007_research_update_to_group'

alias cdwd='cd /windows/Users/Owner/Documents'
alias cdwdb='cd /windows/Users/Owner/Documents/03_Play/2006-2008\ Banking'
alias cdt='cd ~/01_utias/01_local/01_thesis/DECs/dec4'
alias cds='cd /scratch'
alias cdv='cd ~/01_utias/02_oddjob/optima-verify/06_transPredict/y2012/m03'
alias cdvo='cd ~/01_utias/02_oddjob/optima-verify/08_optimize/y2012/m04'
alias cdvs='cd ~/01_utias/04_scinet/optima-verify/08_optimize/y2012/m09'

alias chmodf='find . -type f -print | xargs chmod' # chmod files only (recursively)
alias cll='clear'                   # Clear the screen
alias cl='clear; ls'                # Clear and list
alias courses='cd ~/01_utias/01_local/02_courses'
alias cp='cp -i'                    # Copy, but ask me first
alias crop='mogrify -trim'          # crop the given filename using imagemagik
                                    # (allows you to crop multiple files at one)

alias dec='cd ~/01_utias/01_local/01_thesis/DECs/dec1' # go to local DECs directory
alias df='df -h'
alias dirr='ls -al | more'  
alias dus='sudo du -sm * | sort -n'
alias duf='du -sm * | sort -n'     # list folders in order of increasing size
alias digitizeit='cd ~/digitizeit; java -cp libs/JimiProClasses.zip:libs/jh.jar:libs/kunststoff.jar:libs/foxtrot.jar:DigitizeIt.jar de.ibo.digitizer.DigitizeIt'   # Start the digitizeit software

alias e='emacs'             # Open the text editor emacs
alias ed='ee'  # Open the text editor emacs with emacsclient daemon
# Note: ee is a bash script with the following command:
# estart='exec emacsclient --alternate-editor="" -c "$@" -n'
alias eall='e *.cc *.h' # Open all C++ related files in current directory
alias eb='cd; e .bashrc &'     # Open the .bashrc file for editing
alias emptytrash='sudo rm -rf ~/.local/share/Trash/files/*'
alias ett='emacs -nw -q'     # Open emacs in terminal mode (-nw) without loading the init-file (-q)
alias et='emacs -nw'     # Open emacs in terminal mode (-nw)
alias ec='emacsclient -nw'     # Open emacs in terminal mode (-nw)
alias ev='evince'     # Open evince pdf viewer


alias g='gvim'              # run gnuplot 
alias gb='git branch -a'    # display all git branches
alias gk='gitk --all'       # open git repository GUI
alias gl='git log'          # display git log
alias gn='gnuplot'          # run gnuplot 
alias gt='git status'       # display git status
alias gu='git remote update' # update remote repositories
alias gv='gvim'              # open gvim
alias getkey='sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys' # use as 'getkey 8BAF9A6F'
#alias gmail='google-chrome www.gmail.com &' # open gmail in chrome

alias head='head -100'      # Display the first 100 lines of a file
alias hist='history'        # Display history

alias icemcfd='cd /home/ramy/usr/local/ansys_inc/v130/icemcfd/linux64_amd/bin/; ./icemcfd'
alias imindmapV2='cd /home/ramy/ProgramFiles/iMindMap2.2.3; ./iMindMap'
alias iphoneReConnect='idevicepair unpair && idevicepair pair'

alias l='ls -lh'          # List all files in short format
alias ll='ls -laSh'     # List all files in long format
alias la='ls -a'      # List all including hidden 
alias lm='ls -lrth'   # List all files in order of date modified
alias ld='ls -lrSh'   # List all files in order of file size
alias lf='ls -l | grep ^-' # List files only (not directories)
alias lt='ll --sort=extension' # List files only (not directories)

alias m='more'
alias mv='mv -i'      # Move, but ask me first
alias myzip='tar -cvzf'   # use as "myzip filearchive.tar.gz  foldername/"
alias myunzip='tar -xvpzf' # extract archive, verbose, keep file permissions, unzip using gunzip, and filename to follow
alias mousefix='gpointing-device-settings'

alias oo='openoffice.org' # Open the openoffice software
alias office='openoffice.org'


alias pdf='PDFStudio'     # For a launcher you can use PDFStudio as the command
alias pg='ping www.google.ca'  # ping the google website
alias ps2pdf='ps2pdf -sPAPERSIZE=a4'   # Force the papersize to be the standard a4 letter
alias pmem='pidstat -r -p'   # Outputs the memory statistics for a particular job id
                               # Enter the following: "pmem 6218 2 5 > memlog.txt" for 
                               # 5 outputs every 2 seconds written to file memlog.txt

alias re='reset'      # Reset the terminal
alias rm='rm -i'      # Remove, but ask me first
alias rme='rm *~ -i'  # Remove emacs backup files, but ask me first
alias rmef='rm *~ -f'  # Remove emacs backup files, but ask me first
#alias rename0100='rename "s/01/00/g" rest01*' # rename all rest01 files to rest00 in a directory
alias sbash='source ~/.bashrc' # refresh terminal with new .bashrc file
alias sc='screen -t " "'  # attaches to a given screen session (use session PID)
alias sls='screen -ls' # lists the GNU screen sessions
alias sr='screen -r'  # attaches to a given screen session (use session PID)

#alias tail='tail -100' # Display the last 100 lines of a file
alias t='tec360' # use -mesa flag if compositing causes issues
alias tecplot='tec360' # Run tec360 based on the tecplot path set below
alias tf='tail --lines=300 -F' # run tail with 100 lines and live following
alias tg='tail -50f rest00-00.gnu'  # view the end of the optima gnuplot file

alias tmk='tmux kill-session -t'
alias tml='tmux list-sessions'
alias tmd='tmux detach'
alias tma='tmux attach -t' 

alias tp='tf *.tp'  # view the end of the optima gnuplot file
alias tree='tree -C -I "*.git"' # list all files and directories as a tree
alias treed='tree -C -d -I "*.git"' # list all directories

alias v='vim'
alias vi='vim'
alias vg='valgrind --tool=memcheck --leak-check=yes' # Execute program with valgrind debuger

### Login to remote servers
alias hpacf='cd ~/01_utias/03_hpacf; ssh -X ramy@hpacf.utias.utoronto.ca'
alias oddjob='cd ~/01_utias/; ssh -X ramy@oddjob.utias.utoronto.ca;'
alias scinet='ssh -X -l rashad login.scinet.utoronto.ca' # ssh into scinet
alias guill='ssh -X -l rashad guillimin.clumeq.ca' # ssh into guillimin
alias para='ssh -X rashad@parallel.westgrid.ca' # ssh into parallel
alias latt='ssh -X rashad@lattice.westgrid.ca' # ssh into parallel
### Mounting/Unmounting File Systems using SSHFS - from personal laptop ###
#-- oddjob
alias moddjob='cd ~/01_utias/; sshfs ramy@oddjob.utias.utoronto.ca: 02_oddjob/; cd 02_oddjob/'
alias uoddjob='cd ~/01_utias/; fusermount -u 02_oddjob/'
#-- hpacf
alias mhpacf='cd ~/01_utias/; sshfs ramy@hpacf.utias.utoronto.ca: 03_hpacf/; cd 03_hpacf/'
alias uhpacf='cd ~/01_utias/; fusermount -u 03_hpacf/'
#-- scinet
alias mscinet='cd ~/01_utias/; sshfs rashad@login.scinet.utoronto.ca: 04_scinet/; cd 04_scinet/'
alias uscinet='cd ~/01_utias/; fusermount -u 04_scinet/'
#-- guillimin
alias mguill='cd ~/01_utias/; sshfs rashad@guillimin.clumeq.ca: 05_guillimin/; cd 05_guillimin/'  
alias uguill='cd ~/01_utias/; fusermount -u 05_guillimin/'
#-- guillimin
alias mwest='cd ~/01_utias/; sshfs rashad@parallel.westgrid.ca: 06_westgrid/; cd 06_westgrid/'  
alias uwest='cd ~/01_utias/; fusermount -u 06_westgrid/'

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

#
# export a variable to scp from oddjob
# use as "scp $SCPODD/filedir/filename ~/filename"
#
export SCPODD=ramy@oddjob.utias.utoronto.ca:/nfs/carv/d1/people/ramy

# Editor
export EDITOR="vi"
# setting up emacs client
#export ALTERNATE_EDITOR=emacs EDITOR=emacsclient VISUAL=emacsclient
# **********************************
#  Firefox  clean-up               *
# **********************************
alias CleanFirefox='rm -f .mozilla/firefox/3rd8d8wt.default/.parentlock .mozilla/firefox/h4p7qmwr.default/lock'


# **********************************
#  Thunderbird  clean-up           *
# **********************************
alias CleanThunderbird='rm -f  .thunderbird/8ii90idi.default/.parentlock .thunderbird/5yd1918j.default/lock'


if [ '$HOST != oddjob.utias.utoronto.ca' ]; then
     BIBINPUTS=.:${HOME}/01_thesis/BibTeX_Database:${BIBINPUTS}
     export BIBINPUTS
fi

# **********************************
#             Tecplot360           *
# **********************************
TEC360HOME=/usr/local/tec360_2012R1
export TEC360HOME

PATH=$TEC360HOME/bin:$PATH

# **********************************
#       Script Path and bin          *
# **********************************
export PATH=$HOME/usr/local/bin:/usr/bin:$PATH
PATH=/home/ramy/01_utias/01_local/bin:$PATH
PATH=/home/ramy/01_utias/01_local/bin/scripts:$PATH
PATH=/home/ramy/bin:$PATH
PATH=/home/ramy/bin/scripts:$PATH

# **********************************
#       CFFC Path and bin          *
# **********************************

export CFFC_Path=~/01_utias/01_local/CFFC

PATH=$CFFC_Path/bin:$PATH

# **********************************
#       OPTIMA 2D 
# **********************************

export CVSROOT=/home/ramy/01_utias/01_local/optima
export CVS_RSH=/usr/bin/ssh
export CVSEDITOR=vim
PATH=~/01_utias/01_local/grid_utils:$PATH


# **********************************
#      Xfoil Path
# **********************************
PATH=~/01_utias/01_local/01_thesis/Xfoil/bin:$PATH

# Fortran Compiler Path 
##PATH=$PATH:/usr/local/compiler80/bin
#PATH=$PATH:/opt/intel/bin
#export PATH
##source /usr/local/compiler80/bin/ifortvars.sh
##source /usr/local/compiler80/bin/iccvars.sh
##source /opt/intel/bin/compilervars.sh intel64
#source /opt/intel/bin/ifortvars.sh intel64

# prevent core dumps and segmentation faults
ulimit -c 0                   # limit coredumpsize 0
#ulimit -m unlimited           # limit memoryuse unlimited
ulimit -s unlimited           # limit stacksize unlimited
F_UFMTENDIAN=big       # setenv F_UFMTENDIAN big
export F_UFMTENDIAN

# Commented out by RR on June 16, 2010.
#source /home/ramy/01_utias/01_local/bin/compiler80/bin/ifortvars.sh
#source /home/ramy/01_utias/01_local/bin/compiler80/bin/iccvars.sh

# **********************************
#       Find and Grep Tools        *
# **********************************

# Find a file with a pattern in name:
function ff() { find . -type f -iname '*'$@'*' ; }

# grep
# Make it highlight the search string
alias grep="grep --color=auto"

# Recursively searches all the files for the given string
function rgrep() { grep -irn --include="*" -- "$@" . ; }

# C++ .cc grep, only searches C++ source (.cc) files
## Current directory
function grepc() { grep -in --include="*.cc" -- "$@" * ; }
## Recursive
function rgrepc() { grep -irn --include="*.cc" -- "$@" . ; }

# C++ .h grep, only searches C++ header (.h) files
## Current directory
function greph() { grep -in --include="*.h" -- "$@" * ; }
## Recursive
function rgreph() { grep -irn --include="*.h" -- "$@" . ; }

# Fortran grep, only searches Fortran source 
## Current directory
function grepf() { grep -in --include="*.[fFinc]*" -- "$@" * ; }
## Recursive
function rgrepf() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@" . ; }
function gf() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@" . ; }
function gfc() { grep -irn --include=*.{f,F,f90,F90,inc} -- "call $@" . ; }
function gfs() { grep -irn --include=*.{f,F,f90,F90,inc} -- "subroutine $@" . ; }
function gfe() { grep -irn --include=*.{f,F,f90,F90,inc} -- "$@[\t ]*=[^=]" . ; }

# Python grep, only searches Python source
## Current directory
function grepy() { grep -in --include="*.py" -- "$@" * ; }
## Recursive
function rgrepy() { grep -irn --include="*.py" -- "$@" . ; }

# convert ogv file to avi (input is the filename without the extension)
function ogv2avi() { mencoder -idx "$@".ogv -ovc lavc -oac mp3lame -o "$@".avi ; }

# convert avi file to mpg (input is the filename without the extension)
function avi2mpg() { ffmpeg -i "$@".avi "$@".mpg ; }

# convert ogv file to mpg (input is the filename without the extension)
function ogv2mpg() { mencoder -idx "$@".ogv -ovc lavc -oac mp3lame -o "$@".avi ; ffmpeg -i "$@".avi "$@".mpg ; }


## cd and list 
function c() { cd "$@" ; l ;}

## cd and list 
function cs() { cd *"$@"* ; l ;}

# screen window naming
PROMPT_COMMAND=' 
if [ $TERM = "screen" ]; then 
   MYPWD="${PWD/#$HOME/~}" 
   [ ${#MYPWD} -gt 10 ] && MYPWD=..${MYPWD:${#MYPWD}-18} 
   echo -n -e "\033k$MYPWD\033\\" 
fi 
'
export PATH
# reverse the order of a file (last line first)
#function reverseFile() {perl -e 'print reverse <>' "$@";}
